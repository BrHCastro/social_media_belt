generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]
  tenants  UsersOnTenants[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Tenant {
  id         String   @id @default(uuid())
  name       String
  slug       String
  plan       String
  image      String
  created_at DateTime @default(now())

  users UsersOnTenants[]
  links Link[]

  @@map("tenants")
}

model UsersOnTenants {
  user_id     String
  tenant_id   String
  assigned_at DateTime @default(now())
  role        String?

  user   User   @relation(fields: [user_id], references: [id])
  tenant Tenant @relation(fields: [tenant_id], references: [id])

  @@id([user_id, tenant_id])
  @@map("users_on_tenants")
}

model Link {
  id            String @id @default(cuid())
  internal_name String
  public_name   String
  slug          String
  destination   String

  tenant    Tenant @relation(fields: [tenant_id], references: [id])
  tenant_id String

  @@map("links")
}
